#:kivy 1.4

<Label>:
    font_name: 'ui/fonts/Gotham-Book.ttf'
    font_size: '22dp'
    text_size: self.width-self.padding_x, self.height-self.padding_y
    padding: ('50dp', '5dp')
    valign: 'middle'
    halign: 'center'
    line_height: 1.3


<StatusBar>:
    size: 2048, 150
    y: 1536 - (150*self.alpha_show)
    size_hint: None, None

    canvas:
        Color:
            rgba: 1,1,1,1
        Rectangle:
            pos: 0,0
            size: self.size
            source: "ui/images/statusbarbg.png"

    Label:
        text: "Question: {0}/5".format(root.questions_left)
        size: 2048, 150
        halign: 'left'
        size_hint: None, None
        text_size: 2000, 150
        color: 0,0,0,0.8
        padding: 200, 5

    Label:
        text: "Score: {0}".format(root.score)
        halign: 'right'
        size: 2048, 150
        size_hint: None, None
        text_size: 2000, 150
        color: 0,0,0,0.8
        padding: 200, 5


<Screen>:
    canvas:
        Color:
            rgba: 1,1,1,1
        Rectangle:
            pos: self.pos
            size: self.size
            source: 'ui/images/bg.png'



<IntroScreen>:
    canvas:
        Color:
            rgba: 1,1,1,1
        Rectangle:
            pos: self.pos
            size: self.size
            source: 'ui/screens/intro/bg.png'

    BoxLayout:
        size: '400dp', '250dp'
        size_hint: None, None
        center: root.center_x, root.center_y - dp(100)
        orientation: 'vertical'

        Button:
            background_normal: 'ui/screens/intro/btn.png'
            background_down: 'ui/screens/intro/btn_down.png'
            on_release: app.start_quiz()

        Button:
            background_normal: 'ui/screens/intro/viewstandings_btn.png'
            background_down: 'ui/screens/intro/viewstandings_btn_down.png'
            on_release: app.start_viewstandings()



<QuestionScreen>:
    canvas:
        #Color:
        #    rgba: 1, 1, 1, 1
        #Rectangle:
        #    pos: self.pos
        #    size: self.size
        #    source: 'ui/screens/question/bg.png'

    on_reset: [x.reset() for x in (opt1, opt2, opt3, opt4)]

    BoxLayout:
        orientation: 'vertical'

        Label:
            text: root.text
            markup: True
            font_name: 'ui/fonts/Gotham-Book.ttf'
            font_size: '32dp'
            halign: 'left'
            size_hint: None, 1
            padding: 200, 300
            width: root.width - 250
            line_height: 1.3
            color: .96, .96, .96, 1

        GridLayout:
            on_parent: root.button_grid = self
            cols: 2
            padding: '20dp'
            spacing: '20dp'

            QuestionButton:
                id: opt1
                text: root.option_a
                on_release: app.check_answer(root, self, 1)
            QuestionButton:
                id: opt2
                text: root.option_b
                on_release: app.check_answer(root, self, 2)
            QuestionButton:
                id: opt3
                text: root.option_c
                on_release: app.check_answer(root, self, 3)
            QuestionButton:
                id: opt4
                text: root.option_d
                on_release: app.check_answer(root, self, 4)


<QuestionButton>:
    font_name: 'ui/fonts/Gotham-Bold.ttf' if self.alpha_rotation < 0.5 else 'ui/fonts/Gotham-Bold.ttf'
    halign: 'center' if self.alpha_rotation < 0.5 else 'center'
    font_size: '22dp' if self.alpha_rotation < 0.5 else '14dp'
    background_normal: "ui/screens/question/qbg.png"
    background_down: "ui/screens/question/qbg_down.png"
    background_wrong: "ui/screens/question/qbg_wrong.png"
    color: .96, .96, .96, 1





<ResultsScreen>:
    fadelist_1: [title, score_text]
    fadelist_2: [title, score_text, cityinput, citylabel]
    textinput1: cityinput
    textinput2: nickinput

    Label:
        id: title
        size_hint: 1, None
        text: "Nice work, friend."
        height: 180
        top: root.top - 50
        x: 50
        valign: 'bottom'
        halign: 'left'
        font_name: 'ui/fonts/Gotham-Bold.ttf'
        font_size: 142


    Label:
        id: score_text
        text: root.text
        size_hint: 1, None
        height: 100
        top: title.y - 10
        x: 50
        valign: 'top'
        halign: 'left'
        font_size: 72
        font_name: 'ui/fonts/Gotham-Book.ttf'


    GridLayout:
        cols: 2
        size_hint: None, None
        y: 1536/2 + 20
        height: 300
        x: 50
        width: 2048 - 100

        Label:
            id: citylabel
            text: "Where are you from?"
            font_size: 53
            halign: 'left'
            valign: 'bottom'
            text_size: self.size
            padding: 175, 0
        Label:
            id: nicklabel
            text: "What's your name?"
            font_size: 53
            halign: 'left'
            valign: 'bottom'
            text_size: self.size
            padding: 175, 0

        CustomTextInput:
            id: cityinput
            text: ""
            on__keyboard: root.fadein(root.fadelist_1) if self._keyboard else root.fadeout(root.fadelist_1)
            autocomplete_source: 'ui/uscities.json'
            autocomplete_placeholder: city_placeholder
            autocomplete_hidelist: [nickinput, nicklabel]

        FloatLayout:
            # mimic the height of the cityinput
            id: fl
            size_hint_y: None
            height: cityinput.height
            Widget:
                BoxLayout:
                    id: city_placeholder
                    size: cityinput.width, cityinput.height*2
                    pos: fl.x, fl.y + 50
                    spacing: 10
                    orientation: 'vertical'

            CustomTextInput:
                id: nickinput
                pos: fl.pos
                text: ""
                on__keyboard: root.fadein(root.fadelist_2) if self._keyboard else root.fadeout(root.fadelist_2)


    Button:
        id: submit_btn
        background_down: 'ui/screens/results/submit_down.png' if (nickinput.is_valid and cityinput.is_valid)  else 'ui/screens/results/submit.png'
        background_normal: 'ui/screens/results/submit.png'
        background_color: (1,1,1,1) if (nickinput.is_valid and cityinput.is_valid and len(nickinput.text)>3 and len(cityinput.text)>4) else (.6,.6,.2)
        on_release: app.submit_score(nickinput, cityinput) if (nickinput.is_valid and cityinput.is_valid and len(nickinput.text)>3 and len(cityinput.text)>4) else None
        opacity: 1 if (nickinput.is_valid and cityinput.is_valid) else 0.5

        size: 800, 250
        size_hint: None, None
        right: 2048 - 170
        y: 200


    Button:
        background_down: 'ui/screens/results/nosubmit_down.png'
        background_normal: 'ui/screens/results/nosubmit.png'
        on_release: app.screen_manager.current = 'intro'
        size: 800, 250
        size_hint: None, None
        x: 170
        y: 200

<ProgressionView>:
    auto_dismiss: False
    background: 'ui/screens/loading/loading-logo.png'
    border: (0, 0, 0, 0)

    AnchorLayout:

        BoxLayout:
            size_hint: None, None
            size: ('400dp', '250dp')
            orientation: 'vertical'
            padding: '70dp'
            Label:
                text: root.text
                color: .20, .20, .20, 1
                font_size: '15sp'
            ProgressBar:
                value: root.progression


<CustomTextInput>:
    text: self.rawtext + ('|' if self._keyboard else '')
    font_size: 65
    height: img.texture_size[1]
    size_hint_y: None

    Image:
        id: img
        color: root.color
        pos: root.pos
        size: root.size
        source: 'ui/screens/results/input_bg.png'
        height: self.texture_size[1]
        allow_stretch: True

<CompletionLabel>:
    font_size: 50

<CompletionButton>:
    background_color: 0, 0, 0, 0
    font_name: 'ui/fonts/Gotham-Bold.ttf'
    font_size: 50


<StandingsScreen>:
    container: container
    #canvas:
    #    Color:
    #        rgba: 1,1,1,1
    #    Rectangle:
    #        pos: self.pos
    #        size: self.size
    #        source: 'ui/screens/standings/bg.png'

    Label:
        id: title
        size_hint: 1, None
        text: ''
        height: '100dp'
        top: root.top - dp(10)
        valign: 'bottom'
        right: root.right - dp(20)
        font_name: 'ui/fonts/Gotham-Bold.ttf'
        font_size: '80dp'

    Button:
        top: root.top - dp(10)
        halign: 'left'
        size: dp(225), dp(100)
        size_hint: None, None
        border: 0, 0, 0, 0
        background_normal: 'ui/screens/standings/returnbtn.png'
        background_down: 'ui/screens/standings/returnbtn_down.png'
        on_release: app.screen_manager.current = 'intro'


    GridLayout:
        height: '50dp'
        size_hint: 1, None
        rows: 1
        top: title.y - dp(50)

        Label:
            halign: 'center'
            text: 'NAME'
            text_size: self.width, self.height
            font_name: 'ui/fonts/Gotham-Bold.ttf'

        Label:
            text_size: self.width, self.height
            text: 'SCORE'
            font_name: 'ui/fonts/Gotham-Bold.ttf'

        Label:
            halign: 'center'
            text_size: self.width, self.height
            text: 'CITY'
            font_name: 'ui/fonts/Gotham-Bold.ttf'

        Label:
            font_size: '20dp'
            halign: 'center'
            text_size: self.width, self.height
            text: 'STATE'
            font_name: 'ui/fonts/Gotham-Bold.ttf'


    BoxLayout:
        id: container
        size_hint: None, None
        size: root.width, root.height - dp(270)
        pos: root.x, root.y + dp(50)


<NickStandingEntry>:
    height: '50dp'
    size_hint: 1, None
    rows: 1
    Label:
        halign: 'center'
        text_size: self.width, self.height
        text: root.entry.get('nick', '')
    Label:
        halign: 'center'
        text_size: self.width, self.height
        font_name: 'ui/fonts/Gotham-Bold.ttf'
        text: root.entry.get('score', '')
    Label:
        halign: 'center'
        text_size: self.width, self.height
        text: root.entry.get('city', '').split(',')[0]
    Label:
        halign: 'center'
        text_size: self.width, self.height
        text: root.entry.get('state_code', '')


<CityStandingEntry>:
    Label:
        text: root.entry.get('city', '')
        font_name: 'ui/fonts/Gotham-Bold.ttf'
        halign: 'left'
    Label:
        text: root.entry.get('county', '')
        halign: 'left'
    Label:
        text: root.entry.get('state_code', '')
        size_hint_x: None
        width: '100dp'
        halign: 'left'
    Label:
        text: root.entry.get('score', '')
        size_hint_x: None
        width: '120dp'
        halign: 'center'

<CountyStandingEntry>:
    Label:
        text: root.entry.get('county', '')
        font_name: 'ui/fonts/Gotham-Bold.ttf'
        halign: 'left'
    Label:
        text: root.entry.get('state_code', '')
        size_hint_x: None
        width: '100dp'
        halign: 'left'
    Label:
        text: root.entry.get('score', '')
        size_hint_x: None
        width: '120dp'
        halign: 'center'

<StateStandingEntry>:
    Label:
        text: root.entry.get('state', '')
        font_name: 'ui/fonts/Gotham-Bold.ttf'
        halign: 'left'
    Label:
        text: root.entry.get('score', '')
        size_hint_x: None
        width: '120dp'
        halign: 'center'






<AnswerScreen>:
    scatter: scatter
    zoom_layer: zoomlayer
    image_layout: thumbnail_list
    selected_image: thumbnail_list.selected
    zoom_uix_image: zoom_uix_image

    BoxLayout:
        orientation: 'vertical'
        Widget:
            size_hint_y: None
            height: 150
        Label:
            font_name: 'ui/fonts/Gotham-Bold.ttf'
            font_size: '76dp'
            height: '125dp'
            halign: 'left'
            valign: 'bottom'
            size_hint_y: None
            text: root.feedback
            line_height: 1.3
        Label:
            halign: 'left'
            font_size: '24dp'
            valign: 'top'
            text: root.text+"\n"
        Widget:
            size_hint_y: None
            height: 500

    ScrollingList:
        id: thumbnail_list
        size_hint: 1, None
        height: 500
        canvas.before:
            Color:
                rgba: 0,0,0,0.5
            Rectangle:
                pos: 0,0
                size: self.size

    Button:
        on_release: app.next_question()
        background_normal: "ui/screens/answer/nextbtn.png"
        background_down: "ui/screens/answer/nextbtn_down.png"
        size_hint: None, None
        size: 200,200
        right: root.right - 50
        y: root.y + 500


    ZoomLayer:
        pos: root.pos
        size: root.size
        id: zoomlayer
        canvas.before:
            Color:
                rgba: 0,0,0, .9
            Rectangle:
                pos: self.pos
                size: self.size

        ScatterPlane:
            id: scatter
            scale_min: 1.0
            on_center_x: self.center_x = min(max(0,self.center_x), zoomlayer.width)
            on_center_y: self.center_y = min(max(0,self.center_y), zoomlayer.height)
            Image:
                nocache: True
                id: zoom_uix_image
                mipmap: False
                source: root.zoom_image
                # for positionning, take care of the label
                width: 1024
                height: 1024 * self.image_ratio
                center: zoomlayer.center_x, zoomlayer.center_y + (self.height* 0.0)


        FloatLayout:
            Image:
                size: 150,150
                x: root.width - self.width - 20
                y: root.height - self.height - 200
                source: "ui/screens/answer/imageviewclose.png"
                size_hint: None, None
                on_touch_down: root.hide_zoom() if self.collide_point(*args[1].pos) else None

            Label:
                text: root.text or ''
                size_hint_y: None
                height: '150dp'
                font_size: '15dp'
                y: 20
                #y: -(1 - zoom_layer.opacity) * self.height
                #on_touch_down: root.hide_zoom() if self.collide_point(*args[1].pos) else None








<ScrollingList>:
    scroll_layer: scroll_layer
    item_list: item_list


    StencilView:
        size_hint:None, None
        size: root.size
        pos: root.pos

        TransformLayer:
            id: scroll_layer
            size_hint:None, None
            size: root.size
            pos: root.pos

            BoxLayout:
                padding: 50
                spacing: 50
                orientation: 'horizontal'
                id: item_list
                size_hint: None, None
                #width: self.minimum_width or 0

<PreviewImage>
    nocache: True
    mipmap: False
    size_hint: None, None
    width: (self.image_ratio or 1.0)* 400
    height: 400
    allow_stretch: True
    opacity: 0.0
